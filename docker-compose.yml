version: "3.9"

services:
  # cache storage for replica
  redis_api:
    image: redis
    container_name: redis_api
    ports:
      - "6379:6379"
  db_api:
    image: postgres
    container_name: db_api
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  api:
    build: ./api_server
    container_name: api_server
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./api_server:/api_code
    depends_on:
      - redis_api
      - db_api
  redis_web:
    image: redis
    ports:
      - "6380:6379"
  web_1:
    build: ./web_server
    container_name: web_1
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./web_server:/web_code
    depends_on:
      - api

  web_2:
    build: ./web_server
    container_name: web_2
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./web_server:/web_code
    depends_on:
      - api

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx_server/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_server/ssl/cert/dhparam.pem:/etc/nginx/cert/star_xx_com.pem
      - ./nginx_server/ssl/private/nginx-selfsigned.key:/etc/nginx/cert/star_xx_com.key
      - ./nginx_server/ssl/cert/nginx-selfsigned.crt:/etc/nginx/cert/star_xx_com.crt
    ports:
      - "8080:8080"
      - "443:443"
      - "80:80"
    links:
     - api
     - web_1
     - web_2
volumes:
  db-data:
